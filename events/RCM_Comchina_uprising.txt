###########################
# Chinese Events BORDER WARS ADDED SOUTHERN SHAANXI #ID = 743#
###########################

add_namespace = RCM_communist_uprising
#state event triggered upon uprising/infiltrate
state_event = {
	id = RCM_communist_uprising.1
	title = RCM_communist_uprising.1.t
	desc = RCM_communist_uprising.1.d


	picture = GFX_report_event_chinese_soldiers_01
	hidden = no
	is_triggered_only = yes
	fire_only_once = no
	immediate = {
		owner = {
			set_country_flag = i_have_been_notified
		}
		every_country = {
			limit = {
				OR = {
					is_warlord = yes
					tag = CHI
				}
				NOT = {
					has_government = communism
				}
			}
			country_event = RCM_communist_uprising_country.1
		}
	}



	option = {
		name = RCM_communist_uprising.1.a
		trigger = {
			owner = {
				tag = PRC
			}
		}
	}
	option = {
		name = RCM_communist_uprising.1.b
		trigger = {
			owner = {
				NOT = {
					tag = PRC
				}
			}
		}
	}
}

country_event = {
	id = RCM_communist_uprising.2
	title = RCM_communist_uprising.2.t
	desc = {
		text = RCM_communist_uprising.2.d
		trigger = {
			owner = {
				tag = PRC
			}
		}
	}
	desc = {
		text = RCM_communist_uprising.2.d_CHI
		trigger = {
			owner = {
				NOT = {
					tag = PRC
				}
			}
		}
	}

	picture = GFX_report_event_chinese_soldiers_01
	hidden = no
	is_triggered_only = yes
	fire_only_once = no
	immediate = {
		#
	}


	option = {
		name = RCM_communist_uprising.2.a
		trigger = {
			owner = {
				tag = PRC
			}
		}
	}
	option = {
		name = RCM_communist_uprising.2.b
		trigger = {
			owner = {
				NOT = {
					tag = PRC
				}
			}
		}

	}
}
state_event = {
	id = RCM_communist_uprising.3
	title = RCM_communist_uprising.3.t
	desc = {
		text = RCM_communist_uprising_country.2.d
		trigger = {
			TAG = PRC
		}
	}
	desc = {
		text = RCM_communist_uprising_country.2.d_CHI
		trigger = {
			NOT = {
				TAG = PRC
			}
		}
	}
	is_triggered_only = yes
	immediate = {
		owner = {
			every_other_country = {
				limit = {
					OR = {
						is_warlord = yes
						tag = CHI
					}
				}
				country_event = RCM_communist_uprising_country.2
			}
		}
	}
	picture = GFX_report_event_china_flag
	#fire_only_once = yes
	option = { #OH YEA!
		name = RCM_communist_uprising_country.2.a
		trigger = {
			TAG = FROM
		}
	}
	option = { #OH NO!
		name = RCM_communist_uprising_country.2.b
		trigger = {
			TAG = PRC
		}
	}
}
add_namespace = RCM_communist_uprising_country
country_event = {
	id = RCM_communist_uprising_country.1
	title = RCM_communist_uprising_country.1.t
	desc = RCM_communist_uprising.1.d_CHI
	picture = GFX_report_event_chinese_soldiers_01
	hidden = no
	trigger = {
		NOT = {
			tag = PRC
		}
		is_in_faction_with = event_target:WTT_current_china_leader
	}

	is_triggered_only = yes
	fire_only_once = no
	immediate = {
		#
		set_country_flag = i_have_been_notified
	}

	option = {
		name = RCM_communist_uprising.1.a
		trigger = {
			owner = {
				tag = PRC
			}
		}
	}
	option = {
		name = RCM_communist_uprising.1.b
		trigger = {
			owner = {
				NOT = {
					tag = PRC
				}
			}
		}
	}

}
#crack down
country_event = {
	id = RCM_communist_uprising_country.2
	title = RCM_communist_uprising_country.2.t
	desc = {
		text = RCM_communist_uprising_country.2.d
		trigger = {
			TAG = PRC
		}
	}
	desc = {
		text = RCM_communist_uprising_country.2.d_CHI
		trigger = {
			NOT = {
				TAG = PRC
			}
		}
	}
	trigger = {
		NOT = {
			tag = PRC
		}
		OR = {
			is_in_faction_with = PRC
			is_in_faction_with = event_target:WTT_current_china_leader
		}
	}
	is_triggered_only = yes
	picture = GFX_report_event_china_flag
	#fire_only_once = yes
	option = { #OH YEA!
		name = RCM_communist_uprising_country.2.a
		trigger = {
			TAG = FROM
		}
	}
	option = { #OH NO!
		name = RCM_communist_uprising_country.2.b
		trigger = {
			TAG = PRC
		}
	}
}



######BORDER CLASH
add_namespace = RCM_border_conflict_won_attacker

country_event = {
	id = RCM_border_conflict_won_attacker.1
	title = RCM_border_conflict_won_attacker.1.t
	desc = RCM_border_conflict_won_attacker.1.desc

	picture = GFX_report_event_chinese_soldiers_city_ruin

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = {
			save_event_target_as = our_state
			clr_state_flag = border_incident_active
		}
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = {
			save_event_target_as = their_state
			clr_state_flag = border_incident_active
		}
		remove_targeted_decision = { target = event_target:their_country decision = RCM_border_conflict_time_until_cancelled }
	}

	option = {
		name = RCM_border_conflict_won_attacker.1.a
		add_political_power = 50
		add_war_support = .02
		add_named_threat = { threat = 2 name = border_threat }
		if = {
			limit = {
				check_variable = {
					FROM.FROM.num_owned_states > 1
				}
			}
			transfer_state = FROM.FROM.FROM
		}
		else = {
			FROM.FROM = { ROOT = { annex_country = { target = PREV } } }
		}

		custom_effect_tooltip = RCM_buildings_damaged
		hidden_effect = {
			FROM.FROM.FROM = {
				random_list = {
					60 = { damage_building = { type = arms_factory damage = 0.6 } }
					30 = { damage_building = { type = arms_factory damage = 0.3 } }
					10 = { damage_building = { type = industrial_complex damage = 0.9 } }
				}
			}
		}
	}
}

add_namespace = RCM_border_conflict_won_defender

country_event = {
	id = RCM_border_conflict_won_defender.1
	title = RCM_border_conflict_won_defender.1.t
	desc = RCM_border_conflict_won_defender.1.desc

	picture = GFX_report_event_chinese_soldiers_mountain

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
			remove_targeted_decision = { target = event_target:their_country decision = RCM_border_conflict_time_until_cancelled }
		}
	}

	#Same effect as attacker. Tooltip for their effects
	option = {
		name = RCM_border_conflict_won_defender.1.a
		add_political_power = 150
		army_experience = 30
		add_war_support = .05
		add_tech_bonus = {
			name = defensive_border_conflict_won
			category = land_doctrine
			bonus = 0.5
		}
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					add_political_power = -50
					army_experience = 10
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = RCM_border_conflict_lost_attacker

country_event = {
	id = RCM_border_conflict_lost_attacker.1
	title = RCM_border_conflict_lost_attacker.1.t
	desc = RCM_border_conflict_lost_attacker.1.desc

	picture = GFX_report_event_dead_soldiers

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = our_state }
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = { save_event_target_as = their_state }
		set_country_flag = show_effect_tooltips
		remove_targeted_decision = { target = event_target:their_country decision = RCM_border_conflict_time_until_cancelled }
	}

	#Same effect as defender. Tooltip for their effects
	option = {
		name = RCM_border_conflict_lost_attacker.1.a
		add_political_power = -50
		army_experience = 10
		add_war_support = -.02

		### ideology loss

		###

		custom_effect_tooltip = RCM_buildings_damaged
		hidden_effect = {
			FROM = {
				random_list = {
					60 = { damage_building = { type = arms_factory damage = 0.6 } }
					30 = { damage_building = { type = arms_factory damage = 0.3 } }
					5 = { damage_building = { type = industrial_complex damage = 0.9 } }
					5 = { add_manpower = -500 }
				}
			}
		}
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					add_political_power = 150
					army_experience = 30
					add_tech_bonus = {
						name = defensive_border_conflict_won
						category = land_doctrine
						bonus = 0.5
					}
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = RCM_border_conflict_lost_defender

country_event = {
	id = RCM_border_conflict_lost_defender.1
	title = RCM_border_conflict_lost_defender.1.t
	desc = RCM_border_conflict_lost_defender.1.desc

	picture = GFX_report_event_dead_soldiers

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
			remove_targeted_decision = { target = event_target:their_country decision = RCM_border_conflict_time_until_cancelled }
		}
	}

	#Same effect as attacker. Tooltip for their effects
	option = {
		name = RCM_border_conflict_lost_defender.1.a
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			effect_tooltip = {
				add_political_power = 50
				add_manpower = -500
				add_war_support = .10
				if = {
					limit = {
						check_variable = {
							num_owned_states > 1
						}
					}
					#FROM.FROM = { transfer_state = FROM }
				}
				else = {
					FROM.FROM = { annex_country = { target = ROOT } }
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = RCM_border_conflict_canceled_attacker

country_event = {
	id = RCM_border_conflict_canceled_attacker.1
	title = RCM_border_conflict_canceled_attacker.1.t
	desc = RCM_border_conflict_canceled_attacker.1.desc

	picture = GFX_report_event_chinese_soldiers_mountain

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = our_state }
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = { save_event_target_as = their_state }
		set_country_flag = show_effect_tooltips
	}

	option = {
		name = RCM_border_conflict_canceled_attacker.1.a
		army_experience = 15
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					army_experience = 30
					add_political_power = 50
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = RCM_border_conflict_canceled_defender

country_event = {
	id = RCM_border_conflict_canceled_defender.1
	title = RCM_border_conflict_canceled_defender.1.t
	desc = RCM_border_conflict_canceled_defender.1.desc

	picture = GFX_report_event_chinese_soldiers_mountain

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
		}
	}

	option = {
		name = RCM_border_conflict_canceled_defender.1.a
		army_experience = 30
		add_political_power = 50
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					army_experience = 15
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = RCM_border_incident_defender_warning

country_event = {
	id = RCM_border_incident_defender_warning.1
	title = RCM_border_incident_defender_warning.1.t
	desc = RCM_border_incident_defender_warning.1.desc

	picture = GFX_report_event_chinese_soldiers_mountain

	is_triggered_only = yes

	#Event targets saved
	#attacker_state
	#defender_state
	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = their_country }
	}

	option = {
		name = RCM_border_incident_defender_warning.1.a
	}
}

add_namespace = RCM_border_conflict_escalation

country_event = {
	id = RCM_border_conflict_escalation.1
	title = RCM_border_conflict_escalation.1.t
	desc = RCM_border_conflict_escalation.1.desc

	picture = GFX_report_event_chinese_soldiers_01

	is_triggered_only = yes

	#Event targets saved
	#attacker_state
	#defender_state
	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = their_country }
	}

	option = {
		name = RCM_border_conflict_escalation.1.a
	}
}

add_namespace = RCM_border_conflict_escalate_to_war

country_event = {
	id = RCM_border_conflict_escalate_to_war.1
	title = RCM_border_conflict_escalate_to_war.1.t
	desc = RCM_border_conflict_escalate_to_war.1.desc

	picture = GFX_report_event_chinese_soldiers

	is_triggered_only = yes

	#Event targets saved
	#attacker_state
	#defender_state
	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = their_country }
	}

	option = {
		name = RCM_border_conflict_escalate_to_war.1.a
	}
}
