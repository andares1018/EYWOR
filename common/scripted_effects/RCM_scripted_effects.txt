#	Example:
#
#	example_effect = {
#		add_political_power = 66
#		add_popularity = {
#			ideology = fascism
#			popularity = 0.33
#		}
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
RRC_PREP = {#used in complete_effect
	hidden_effect = {
		set_country_flag = im_making_or_have_made_rrc
		if = {
			limit = {
				any_other_country = {
					is_legit_china = yes
					NOT = {
						is_subject_of = JAP
					}
				}
			}
			news_event = {
				days = 25 id = efm_news.1012
			}
		}
	}
}
JNC_DETERMINE = { #used in complete_effect
	hidden_effect = {
		####DETERMINE
		if = {
			limit = {
				HPC = {
					is_puppet_of = JAP
				}
			}
			if = {
				limit = {
					EHB = {
						is_ai = no
					}
					HPC = {
						is_ai = yes
					}
				}
				EHB = {
					annex_country = {
						target = HPC
						transfer_troops = yes
					}
					set_country_flag = im_jnc_now
				}
				else = {
					HPC = {
						annex_country = {
							target = EHB
							transfer_troops = yes
						}
						set_country_flag = im_jnc_now
					}
				}
			}
			else = {
				EHB = {
					set_country_flag = im_jnc_now
				}
			}
		}
	}
}
max_infra_effect = {
	add_building_construction = {
		type = infrastructure
		level = 10
		instant_build = yes
	}
}
level_3_infra = {
	if = {
		limit = {
			free_building_slots = {
				building = infrastructure
				size > 9
			}
		}
		add_building_construction = {
			type = infrastructure
			level = 3
			instant_build = yes
		}
	}
	if = {
		limit = {
			free_building_slots = {
				building = infrastructure
				size > 8
			}
			free_building_slots = {
				building = infrastructure
				size < 10
			}
		}
		add_building_construction = {
			type = infrastructure
			level = 2
			instant_build = yes
		}
	}
	if = {
		limit = {
			free_building_slots = {
				building = infrastructure
				size > 7
			}
			free_building_slots = {
				building = infrastructure
				size < 9
			}
		}
		add_building_construction = {
			type = infrastructure
			level = 1
			instant_build = yes
		}
	}
}
level_6_infra = {
	if = {
		limit = {
			free_building_slots = {
				building = infrastructure
				size > 6
			}
			free_building_slots = {
				building = infrastructure
				size < 8
			}
		}
		add_building_construction = {
			type = infrastructure
			level = 3
			instant_build = yes
		}
	}
	if = {
		limit = {
			free_building_slots = {
				building = infrastructure
				size > 5
			}
			free_building_slots = {
				building = infrastructure
				size < 7
			}
		}
		add_building_construction = {
			type = infrastructure
			level = 2
			instant_build = yes
		}
	}
	if = {
		limit = {
			free_building_slots = {
				building = infrastructure
				size > 4
			}
			free_building_slots = {
				building = infrastructure
				size < 6
			}
		}
		add_building_construction = {
			type = infrastructure
			level = 1
			instant_build = yes
		}
	}
}
RRC_core = {
	add_state_core = 609
	add_state_core = 743
	add_state_core = 761
	add_state_core = 613
	add_state_core = 592
	add_state_core = 597
	add_state_core = 766
	add_state_core = 614
	add_state_core = 608
	add_state_core = 596
	add_state_core = 595
	add_state_core = 764
	add_state_core = 591
	add_state_core = 600
	add_state_core = 620
	add_state_core = 756
	add_state_core = 325
	add_state_core = 771
	add_state_core = 772
	add_state_core = 603
	add_state_core = 783
	add_state_core = 606
	add_state_core = 768
	add_state_core = 598
	add_state_core = 765
	add_state_core = 607
	add_state_core = 744
	add_state_core = 745
	add_state_core = 746
	add_state_core = 615
	add_state_core = 767
	add_state_core = 622
	add_state_core = 605
	add_state_core = 769
	add_state_core = 770
	add_state_core = 326
	add_state_core = 602
	add_state_core = 784
	add_state_core = 599
	add_state_core = 785
	add_state_core = 773
	add_state_core = 593
	add_state_core = 786
	add_state_core = 594
	add_state_core = 601
	add_state_core = 782
	add_state_core = 729
	add_state_core = 728
	add_state_core = 329
	add_state_core = 789
	add_state_core = 788
	add_state_core = 787
	add_state_claim = 790
	add_state_claim = 791
	add_state_claim = 792
	add_state_claim = 793
	add_state_claim = 794
	add_state_claim = 604
	add_state_claim = 802
	add_state_claim = 283
	add_state_claim = 616
	add_state_claim = 611
	add_state_claim = 612
	add_state_claim = 621
	add_state_claim = 763
	add_state_claim = 757
}
peace_with_japan_land_partition = {
	effect_tooltip = {
		white_peace = JAP
	}
	hidden_effect = {
		every_country = {
			limit = {
				OR = {
					tag = ROOT
					has_war_together_with = ROOT
				}
				has_war_with = JAP
			}
			white_peace = JAP
		}
		every_country = {
			limit = {
				OR = {
					tag = JAP
					has_war_together_with = JAP
				}
				has_war_with = ROOT
			}
			white_peace = ROOT
		}
		JAP = {
			white_peace = NEA
		}
		every_state = {
			limit = {
				is_core_of = ROOT
				is_controlled_by = ROOT
				is_owned_by_jap_or_its_puppet = yes
			}
			ROOT = {
				transfer_state = PREV
			}
		}
		if = {
			limit = {
				HPC = {
					is_subject_of = JAP
				}
			}
			annex_country = { target = HPC transfer_troops = no }
		}
	}
	every_state = {
		limit = {
			NOT = {
				owner = {
					tag = PRC
				}
			}
			OR = {
				AND = {
					OR = {
						state = 611
						state = 612
						state = 757
					}
					is_owned_by_jap_or_its_puppet = yes
				}
				AND = {
					is_northeast_china_state = yes
					NOT = { state = 757 }#east chahar
					is_owned_by_jap_or_its_puppet = yes
				}
				AND = {
					is_north_china_state_for_liberation = yes
					is_owned_by_jap_or_its_puppet = yes
				}
				is_owned_by = ROOT
				state = 524
			}
			OR = {
				is_core_of = ROOT
				is_claimed_by = ROOT
			}
		}
		ROOT = { transfer_state = PREV }
		set_state_flag = CHI_states
	}
}
create_mengjiang = {
	custom_effect_tooltip = MEN_reform
	add_state_core = 612
	add_state_core = 611
	add_state_core = 621
	add_state_core = 763
	add_state_core = 802
	add_state_core = 330
	hidden_effect = {
		every_state = {
			limit = {
				controller = {
					has_full_control_of_state = PREV
					OR = {
						tag = JAP
						is_subject_of = JAP
					}
				}
				OR = {
					is_claimed_by = ECA
					is_core_of = ECA
				}
				NOT = {
					OR = {
						state = 621
						#no need 763
						is_owned_by = NSG
						is_owned_by = SCG
					}
				}
			}
			ECA = {
				transfer_state = PREV
			}
		}
	}
	hidden_effect = {
		ECA = {
			set_cosmetic_tag = MEJ
			set_political_party = {
				ideology = neutrality
				popularity = 30
			}
			add_popularity = {
				ideology = fascism
				popularity = 70
			}
			add_popularity = {
				ideology = n_socialism
				popularity = 0
			}
			set_politics = {
				ruling_party = fascism
				elections_allowed = no
			}
		}
		set_global_flag = mej_exists
	}
}
#HUGE
RRC_CREATION = {
	####CORE&ANNEX
	set_country_flag = im_rrc_now
	set_global_flag = rrc_exists
	every_state = {
		remove_core_of = RFM
		remove_core_of = EHB
		if = {
			limit = {
				HPC = {
					is_subject_of = JAP
				}
			}
			remove_core_of = HPC
		}
	}
	RRC_core = yes
	if = {
		limit = {
			NOT = {
				TAG = RFM
			}
		}
		annex_country = {
			target = RFM
			transfer_troops = yes
		}
		else = {
			if = {
				limit = {
					HPC = {
						is_subject_of = JAP
					}
				}
				annex_country = {
					target = HPC
					transfer_troops = yes
				}
				else = {
					annex_country = {
						target = EHB
						transfer_troops = yes
					}
				}
			}

		}
	}
	####STATES
	every_state = {
		limit = {
			NOT = {
				is_owned_by = ECA
				AND = {
					is_owned_by = XSM
					XSM = {
						is_subject_of = JAP
					}
				}
			}
			OR = {
				is_owned_by_CHI_PRC_WARLORD_SIK = yes
				is_owned_by = JAP
			}
			is_core_of = PREV
			JAP_or_its_puppet_has_full_control_over_prev_states = yes
		}
		PREV = {
			set_state_controller = PREV
		}
		if = {
			limit = {
				JAP_or_its_puppet_has_full_control_over_prev_states = yes
			}
			PREV = {
				set_state_controller = PREV
			}
		}
	}
	#####HIST
	set_cosmetic_tag = RRC
	set_political_party = {
		ideology = neutrality
		popularity = 30
	}
	set_political_party = {
		ideology = n_socialism
		popularity = 0
	}
	set_political_party = {
		ideology = fascism
		popularity = 70
	}
	set_politics = {
		ruling_party = fascism
		elections_allowed = no
	}
	create_country_leader = {
		name = "Wang Jingwei"
		desc = "POLITICS_WANG_JINGWEI_DESC"
		picture = "gfx/leaders/RRC/Portrait_Wang.dds"
		expire = "1965.1.1"
		ideology = collaborationism
		traits = {
		}
	}
	army_experience = 50
	load_oob = RRC_focus
	set_capital = 598
	every_state = {
		limit = {
			is_core_of = PREV
			JAP_or_its_puppet_has_full_control_over_prev_states = yes
			NOT = {
				OR = {
					is_owned_by = PREV
					is_controlled_by = PREV
				}
			}
		}
		PREV = {
			transfer_state = PREV
		}
	}
}
JNC_CREATION = {
	hidden_effect = {
		transfer_state = 608
		add_state_core = 614
		add_state_core = 615
		add_state_core = 789
		add_state_core = 767
		add_state_core = 608
		add_state_core = 609
		add_state_core = 597
		add_state_core = 766
		add_state_core = 607
		every_state = {
			limit = {
				JAP_or_its_puppet_has_full_control_over_prev_states = yes
				is_core_of = PREV
			}
			PREV = {
				set_state_controller = PREV
				#transfer_state = PREV #puppet transfer state active
			}
		}
		load_oob = JNC_prov_focus
		set_capital = 608
		set_cosmetic_tag = JNC
		set_global_flag = jnc_exists
		set_country_flag = im_jnc_now
		add_to_war = {
			targeted_alliance = JAP
			enemy = CHI
		}
		add_popularity = {
			ideology = fascism
			popularity = 0.7
		}
		set_politics = {
			ruling_party = fascism
			elections_allowed = no
		}
		if = {
			limit = {
				tag = HPC
				EHB = {
					is_ai = yes
				}
			}
			annex_country = {
				target = EHB transfer_troops = yes
			}
		}
		if = {
			limit = {
				tag = EHB
				HPC = {
					is_subject_of = JAP
					is_ai = yes
				}
			}
			annex_country = {
				target = HPC transfer_troops = yes
			}
		}
		create_country_leader = {
			name = "Wang Kemin"
			desc = "POLITICS_WANG_KEMIN_DESC"
			picture = "gfx/leaders/JNC/Portrait_JNC_Wang_Kemin.dds"
			expire = "1945.12.25"
			ideology = collaborationism
		}
		army_experience = 50
	}
	effect_tooltip = {
		JNC = {
			add_state_core = 614
			add_state_core = 615
			add_state_core = 789
			add_state_core = 767
			add_state_core = 608
			add_state_core = 609
			add_state_core = 597
			add_state_core = 766
			add_state_core = 607
		}
	}
	custom_effect_tooltip = JNC_prov_focus
}

RFM_CREATION = {
	hidden_effect = {
		set_global_flag = rfm_exists
		RFM = {
			annex_country = {
				target = CCP
				transfer_troops = yes
			}
			transfer_state = 613
			transfer_state = 598
			JAP = {
				puppet = RFM
			}
			army_experience = 50
			every_state = {
				limit = {
					JAP_or_its_puppet_has_full_control_over_prev_states = yes
					OR = {
						state = 598
						state = 765
						state = 606
						state = 768
						state = 756
						state = 596
						state = 746
						state = 744
					}
				}
				RFM = {
					set_state_controller = PREV
					#transfer_state = PREV #puppet transfer state active
				}
			}
			add_state_core = 598
			add_state_core = 765
			add_state_core = 596
			add_state_core = 606
			add_state_core = 768
			add_state_core = 756
			add_state_core = 744
			add_state_core = 746
			add_state_core = 613
			add_to_war = {
				targeted_alliance = JAP
				enemy = CHI
			}
			load_oob = RFM_focus
			set_politics = {
				parties = {
					democratic = {
						popularity = 0
						banned = yes
					}
					fascism = {
						popularity = 60
					}
					communism = {
						popularity = 0
						banned = yes
					}
					n_socialism = {
						popularity = 0
						banned = yes
					}
					neutrality = {
						popularity = 40
					}
				}
				ruling_party = fascism
				last_election = "1936.1.1"
				election_frequency = 48
				elections_allowed = no
			}
		}
	}
	effect_tooltip = {
		RFM = {
			add_state_core = 598
			add_state_core = 765
			add_state_core = 596
			add_state_core = 606
			add_state_core = 768
			add_state_core = 756
			add_state_core = 744
			add_state_core = 746
			add_state_core = 613
		}
	}
	if = {
		limit = {
			JAP = {
				NOT = {
					has_global_flag = rfm_exists
				}
			}
		}
		custom_effect_tooltip = CCP_reform
	}
	custom_effect_tooltip = RFM_focus
}

CCP_CREATION = {
	custom_effect_tooltip = shanghai_puppet
	hidden_effect = {
		CCP = {
			transfer_state = 613
		}
		JAP = {
			puppet = CCP
		}
	}
	CCP = {
		add_state_core = 613
	}
	hidden_effect = {
		CCP = {
			add_to_war = {
				targeted_alliance = JAP
				enemy = CHI
			}
			add_popularity = {
				ideology = fascism
				popularity = 1
			}
			set_politics = {
				parties = {
					democratic = {
						popularity = 0
						banned = yes
					}
					fascism = {
						popularity = 100
					}
					communism = {
						popularity = 0
						banned = yes
					}
					neutrality = {
						popularity = 0
					}
				}
				ruling_party = fascism
				elections_allowed = no
			}
		}
	}
	set_global_flag = ccp_exists
}

MEN_CREATION = {
	set_global_flag = men_exists
	JAP = {
		set_autonomy = {
			target = ECA
			autonomous_state = autonomy_puppet
		}
	}
	ECA = {
		set_cosmetic_tag = MEN
		army_experience = 50
		set_politics = {
			ruling_party = fascism
			elections_allowed = no
		}
		set_political_party = {
			ideology = neutrality
			popularity = 30
		}
		set_political_party = {
			ideology = n_socialism
			popularity = 0
		}
		set_political_party = {
			ideology = communism
			popularity = 0
		}
		set_political_party = {
			ideology = fascism
			popularity = 70
		}
		create_country_leader = {
			name = "Yondonwangchug"
			desc = ""
			picture = "Portrait_Yondonwangchug.dds"
			expire = "1966.4.23"
			ideology = fascism_ideology
			traits = {
				spirit_of_genghis
			}
		}
		set_capital = 612
	}
}
puppet_reclaim_land = {
	every_state = {
		limit = {
			OR = {
				JAP = {
					has_full_control_of_state = PREV
				}
				any_other_country = {
					is_subject_of = JAP
					has_full_control_of_state = PREV
				}
			}
			is_core_of = PREV
		}
		PREV = {
			transfer_state = PREV
		}
	}
}


capture_collaborators = {
	hidden_effect = {
		FROM = {
			if = {
				limit = {
					is_subject_of = JAP
				}
				country_event = {
					id = puppet_transfer.5
				}
				#JAP = {
					#	country_event = {
						#		id = rcmjapan.1000
						#	}
					#}
			}
		}
		every_state = {
			limit = {
				is_owned_by = FROM
			}
			set_state_flag = transfer_hanjian_captured_@FROM
		}
		random_country = {
			limit = {
				tag = FROM
				is_subject_of = JAP
				NOT = {
					OR = {
						tag = PRC
						tag = CHI
						is_warlord = yes
						is_legit_china = yes
					}
				}
			}
			JAP = {
				annex_country = {
					target = PREV transfer_troops = yes
				}
			}
		}

		every_state = {
			limit = {
				has_state_flag = hanjian_captured_@FROM
			}
			ROOT = {
				if = {
					limit = {
						NOT = {
							OR = {
								tag = JAP
								has_war_together_with = JAP
							}
						}
					}
					transfer_state = PREV
				}
			}
			clr_state_flag = hanjian_captured_@FROM
		}
		every_state = {
			limit = {
				has_state_flag = transfer_hanjian_captured_@FROM
			}
			ROOT = {
				set_state_owner = PREV
			}
			clr_state_flag = transfer_hanjian_captured_@FROM
		}
	}
	effect_tooltip = {
		annex_country = {
			target = FROM transfer_troops = no
		}
	}
}

for_tracking_ten_comp_foc = {
	if = { #1st round
		limit = {
			NOT = {
				has_country_flag = a_focus_completed
			}
		}
		set_country_flag = a_focus_completed
		else = { #2nd round
			if = {
				limit = {
					NOT = {
						has_country_flag = b_focus_completed
					}
				}
				set_country_flag = b_focus_completed
				else = { #3rd round
					if = {
						limit = {
							NOT = {
								has_country_flag = c_focus_completed
							}
						}
						set_country_flag = c_focus_completed
						else = { #4th round
							if = {
								limit = {
									NOT = {
										has_country_flag = d_focus_completed
									}
								}
								set_country_flag = d_focus_completed
								else = { #5
									if = {
										limit = {
											NOT = {
												has_country_flag = e_focus_completed
											}
										}
										set_country_flag = e_focus_completed
										else = { #6
											if = {
												limit = {
													NOT = {
														has_country_flag = f_focus_completed
													}
												}
												set_country_flag = f_focus_completed
												else = { #7
													if = {
														limit = {
															NOT = {
																has_country_flag = g_focus_completed
															}
														}
														set_country_flag = g_focus_completed
														else = { #8
															if = {
																limit = {
																	NOT = {
																		has_country_flag = h_focus_completed
																	}
																}
																set_country_flag = h_focus_completed
																else = { #9
																	if = {
																		limit = {
																			NOT = {
																				has_country_flag = i_focus_completed
																			}
																		}
																		set_country_flag = i_focus_completed
																		else = { #10
																			if = {
																				limit = {
																					NOT = {
																						has_country_flag = j_focus_completed
																					}
																				}
																				set_country_flag = j_focus_completed
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

industry_evac_decision = {
	set_variable = {
		var = af_level
		value = arms_factory_level
	}
	set_variable = {
		var = af_to_move
		value = arms_factory_level
	}
	multiply_variable = {
		var = af_to_move
		value = global.CHI_industrial_evacuations_amount_factor
	}

	set_variable = {
		var = ic_level
		value = industrial_complex_level
	}
	set_variable = {
		var = ic_to_move
		value = industrial_complex_level
	}
	multiply_variable = {
		var = ic_to_move
		value = global.CHI_industrial_evacuations_amount_factor
	}

	custom_effect_tooltip = CHI_industrial_evacuations_remove_AF
	custom_effect_tooltip = CHI_industrial_evacuations_remove_IC
	hidden_effect = {
		remove_building = {
			type = arms_factory
			level = af_level
		}
		remove_building = {
			type = industrial_complex
			level = ic_level
		}
	}

	#Move AF
	CONTROLLER = {
		random_owned_controlled_state = {
			prioritize = { 605 770 769 }
			limit = {
				is_fully_controlled_by = ROOT
				any_neighbor_state = {
					is_controlled_by = ROOT
				}
				free_building_slots = {
					building = arms_factory
					size > 2
					include_locked = yes
				}
			}

			custom_effect_tooltip = CHI_industrial_evacuations_add_AF
			hidden_effect = {
				add_extra_state_shared_building_slots = af_to_move
				add_building_construction = {
					type = arms_factory
					level = af_to_move
					instant_build = yes
				}
				CONTROLLER = { set_country_flag = CHI_industrial_evacuations_moved_AF }
			}
		}

		#If no states are really safe or all safe are filled
		#Move to random controlled state
		if = {
			limit = {
				NOT = { has_country_flag = CHI_industrial_evacuations_moved_AF }
				NOT = {
					any_state = {
						is_fully_controlled_by = ROOT
						any_neighbor_state = {
							is_controlled_by = ROOT
						}
						free_building_slots = {
							building = arms_factory
							size > 2
							include_locked = yes
						}
					}
				}
			}
			random_owned_controlled_state = {
				prioritize = { 605 770 601 }
				limit = {
					is_controlled_by = ROOT
					free_building_slots = {
						building = arms_factory
						size > 2
						include_locked = yes
					}
				}

				custom_effect_tooltip = CHI_industrial_evacuations_add_AF
				hidden_effect = {
					add_extra_state_shared_building_slots = af_to_move
					add_building_construction = {
						type = arms_factory
						level = af_to_move
						instant_build = yes
					}
				}
			}
		}
		clr_country_flag = CHI_industrial_evacuations_moved_AF


		#Move IC
		random_owned_controlled_state = {
			prioritize = { 605 770 769 }
			limit = {
				is_fully_controlled_by = ROOT
				any_neighbor_state = {
					is_controlled_by = ROOT
				}
				free_building_slots = {
					building = industrial_complex
					size > 2
					include_locked = yes
				}
			}

			custom_effect_tooltip = CHI_industrial_evacuations_add_IC
			hidden_effect = {
				add_extra_state_shared_building_slots = ic_to_move
				add_building_construction = {
					type = industrial_complex
					level = ic_to_move
					instant_build = yes
				}
				CONTROLLER = { set_country_flag = CHI_industrial_evacuations_moved_IC }
			}
		}

		#If no states are really safe or all safe are filled
		#Move to random controlled state
		if = {
			limit = {
				NOT = { has_country_flag = CHI_industrial_evacuations_moved_IC }
				NOT = {
					any_state = {
						is_fully_controlled_by = ROOT
						any_neighbor_state = {
							is_controlled_by = ROOT
						}
						free_building_slots = {
							building = industrial_complex
							size > 2
							include_locked = yes
						}
					}
				}
			}
			random_owned_controlled_state = {
				prioritize = { 605 770 769 }
				limit = {
					is_controlled_by = ROOT
					free_building_slots = {
						building = industrial_complex
						size > 2
						include_locked = yes
					}
				}

				custom_effect_tooltip = CHI_industrial_evacuations_add_IC
				hidden_effect = {
					add_extra_state_shared_building_slots = ic_to_move
					add_building_construction = {
						type = industrial_complex
						level = ic_to_move
						instant_build = yes
					}
				}
			}
		}
		clr_country_flag = CHI_industrial_evacuations_moved_IC
	}
}
long_march_up = {
	if = {
		limit = { has_idea = Long_March_2 }
		swap_ideas = {
			remove_idea = Long_March_2
			add_idea = Long_March_1
		}
	}
	else_if = {
		limit = { has_idea = Long_March_3 }
		swap_ideas = {
			remove_idea = Long_March_3
			add_idea = Long_March_2
		}
	}
	else_if = {
		limit = { has_idea = Long_March_4 }
		swap_ideas = {
			remove_idea = Long_March_4
			add_idea = Long_March_3
		}
	}
	else_if = {
		limit = { has_idea = Long_March_5 }
		swap_ideas = {
			remove_idea = Long_March_5
			add_idea = Long_March_4
		}
	}
	else_if = {
		limit = { NOT = { has_idea = Long_March_5 } }
		add_ideas = Long_March_5
	}
}
long_march_down = {
	if = {
		limit = { has_idea = Long_March_5 }
		remove_ideas = Long_March_5
	}
	if = {
		limit = { has_idea = Long_March_4 }
		swap_ideas = {
			remove_idea = Long_March_4
			add_idea = Long_March_5
		}
	}
	if = {
		limit = { has_idea = Long_March_3 }
		swap_ideas = {
			remove_idea = Long_March_3
			add_idea = Long_March_4
		}
	}
	if = {
		limit = { has_idea = Long_March_2 }
		swap_ideas = {
			remove_idea = Long_March_2
			add_idea = Long_March_3
		}
	}
	if = {
		limit = { has_idea = Long_March_1 }
		swap_ideas = {
			remove_idea = Long_March_1
			add_idea = Long_March_2
		}
	}
}
reenable_duration = {
	if = {
		limit = { has_country_flag = infra_tier_3 }
		custom_effect_tooltip = infra_tier_3_tt
	}
	else_if = {
		limit = { has_country_flag = infra_tier_2 }
		custom_effect_tooltip = infra_tier_2_tt
	}
	else_if = {
		limit = { has_country_flag = infra_tier_1 }
		custom_effect_tooltip = infra_tier_1_tt
	}
}

PRC_border_conflict_NXM_select = {
	hidden_effect = {
		clear_variable = test_defender_state_temp
		clear_variable = test_attacker_state_temp
		clear_variable = defender_state_temp
		clear_variable = attack_dir_state_temp
		clear_variable = attacker_state_temp
		NXM = {
			random_owned_controlled_state = {
				limit = {
					state = 760
					set_temp_variable = { test_defender_state_temp = id }
					#hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
					any_neighbor_state = {
						#hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						set_temp_variable = { test_attacker_state_temp = id }
						#ROOT = {
						#	divisions_in_border_state = {
						#		state = var:test_attacker_state_temp
						#		border_state = var:test_defender_state_temp
						#		size > 0
						#	}
						#}
						#is_fully_controlled_by = ROOT
					}
				}
				save_event_target_as = defender_state
				set_variable = { NXM.defender_state_vs_@ROOT = id }
				set_temp_variable = { defender_state_temp = id }
				set_state_flag = border_incident_active
			}
		}
		random_state = {
			limit = {
				is_fully_controlled_by = ROOT
				hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				set_temp_variable = { attack_dir_state_temp = id }
				ROOT = {
					divisions_in_border_state = {
						state = var:attack_dir_state_temp
						border_state = var:NXM.defender_state_vs_@ROOT
						size > 0
					}
				}
				any_neighbor_state = {
					state = var:NXM.defender_state_vs_@ROOT
				}
			}
			save_event_target_as = attacker_state
			set_variable = { NXM.attacker_state_vs_@ROOT = id }
			set_temp_variable = { attacker_state_temp = id }
			set_state_flag = border_incident_active
		}
	}
	custom_effect_tooltip = RCM_border_incident_delay_until_new_incident_180
	NXM = {
		country_event = { id = RCM_border_incident_defender_warning.1 hours = 1 }
		activate_targeted_decision = { target = ROOT decision = RCM_border_conflict_incident_warning_defender }
	}
}

PRC_border_conflict_NXM = {
	hidden_effect = {
		var:NXM.defender_state_vs_@ROOT = {
			save_event_target_as = defender_state
		}
		var:NXM.attacker_state_vs_@ROOT = {
			save_event_target_as = attacker_state
		}
		random_state = {
			limit = {
				is_owned_and_controlled_by = NXM
				hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				any_neighbor_state = {
					is_fully_controlled_by = ROOT
					has_ROOT_at_least_1_div_in_current_state_scope = yes
					hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				}
			}
			set_temp_variable = { defender_state_temp = id }
		}
		random_state = {
			limit = {
				is_fully_controlled_by = ROOT
				hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				has_ROOT_at_least_1_div_in_current_state_scope = yes
				any_neighbor_state = {
					state = var:NXM.defender_state_vs_@ROOT
				}
			}
			set_temp_variable = { attacker_state_temp = id }
		}
	}

	start_border_war = {
		change_state_after_war = no
		attacker = {
			state = var:NXM.attacker_state_vs_@ROOT
			num_provinces = 4
			on_win = RCM_border_conflict_won_attacker.1
			on_lose = RCM_border_conflict_lost_attacker.1
			on_cancel = RCM_border_conflict_canceled_attacker.1
		}

		defender = {
			state = var:NXM.defender_state_vs_@ROOT
			num_provinces = 4
			on_win = RCM_border_conflict_won_defender.1
			on_lose = RCM_border_conflict_lost_defender.1
			on_cancel = RCM_border_conflict_canceled_defender.1
		}
	}
	hidden_effect = { NXM = { remove_targeted_decision = { target = ROOT decision = RCM_border_conflict_escalation_warning_defender } } }
	NXM = {
		activate_targeted_decision = { target = ROOT decision = RCM_border_conflict_escalate_conflict }
		activate_targeted_decision = { target = ROOT decision = RCM_border_conflict_time_until_cancelled }
	}
	activate_targeted_decision = { target = NXM decision = RCM_border_conflict_escalate_conflict }
	activate_targeted_decision = { target = NXM decision = RCM_border_conflict_time_until_cancelled }
}
PRC_border_conflict_SHX_select = {
	clear_variable = test_defender_state_temp
	clear_variable = test_attacker_state_temp
	clear_variable = defender_state_temp
	clear_variable = attack_dir_state_temp
	clear_variable = attacker_state_temp
	hidden_effect = {
		SHX = {
			random_owned_controlled_state = {
				limit = {
					state = 789
					set_temp_variable = { test_defender_state_temp = id }
					#hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
					any_neighbor_state = {
						#hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						set_temp_variable = { test_attacker_state_temp = id }
						#ROOT = {
						#	divisions_in_border_state = {
						#		state = var:test_attacker_state_temp
						#		border_state = var:test_defender_state_temp
						#		size > 0
						#	}
						#}
						#is_fully_controlled_by = ROOT
					}
				}
				save_event_target_as = defender_state
				set_variable = { SHX.defender_state_vs_@ROOT = id }
				set_temp_variable = { defender_state_temp = id }
				set_state_flag = border_incident_active
			}
		}
		random_state = {
			limit = {
				is_fully_controlled_by = ROOT
				hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				set_temp_variable = { attack_dir_state_temp = id }
				ROOT = {
					divisions_in_border_state = {
						state = var:attack_dir_state_temp
						border_state = var:SHX.defender_state_vs_@ROOT
						size > 0
					}
				}
				any_neighbor_state = {
					state = var:SHX.defender_state_vs_@ROOT
				}
			}
			save_event_target_as = attacker_state
			set_variable = { SHX.attacker_state_vs_@ROOT = id }
			set_temp_variable = { attacker_state_temp = id }
			set_state_flag = border_incident_active
		}
	}
	custom_effect_tooltip = RCM_border_incident_delay_until_new_incident_180
	SHX = {
		country_event = { id = RCM_border_incident_defender_warning.1 hours = 1 }
		activate_targeted_decision = { target = ROOT decision = RCM_border_conflict_incident_warning_defender }
	}
}
PRC_border_conflict_SHX = {
	hidden_effect = {
		var:SHX.defender_state_vs_@ROOT = {
			save_event_target_as = defender_state
		}
		var:SHX.attacker_state_vs_@ROOT = {
			save_event_target_as = attacker_state
		}
		random_state = {
			limit = {
				state = 789
				is_owned_and_controlled_by = SHX
				hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				any_neighbor_state = {
					is_fully_controlled_by = ROOT
					has_ROOT_at_least_1_div_in_current_state_scope = yes
					hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				}
			}
			set_temp_variable = { defender_state_temp = id }
		}
		random_state = {
			limit = {
				is_fully_controlled_by = ROOT
				hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				has_ROOT_at_least_1_div_in_current_state_scope = yes
				any_neighbor_state = {
					state = var:SHX.defender_state_vs_@ROOT
				}
			}
			set_temp_variable = { attacker_state_temp = id }
		}
	}
	start_border_war = {
		change_state_after_war = no
		attacker = {
			state = var:SHX.attacker_state_vs_@ROOT
			num_provinces = 4
			on_win = RCM_border_conflict_won_attacker.1
			on_lose = RCM_border_conflict_lost_attacker.1
			on_cancel = RCM_border_conflict_canceled_attacker.1
		}

		defender = {
			state = var:SHX.defender_state_vs_@ROOT
			num_provinces = 4
			on_win = RCM_border_conflict_won_defender.1
			on_lose = RCM_border_conflict_lost_defender.1
			on_cancel = RCM_border_conflict_canceled_defender.1
		}
	}
	hidden_effect = { SHX = { remove_targeted_decision = { target = ROOT decision = RCM_border_conflict_escalation_warning_defender } } }
	SHX = {
		activate_targeted_decision = { target = ROOT decision = RCM_border_conflict_escalate_conflict }
		activate_targeted_decision = { target = ROOT decision = RCM_border_conflict_time_until_cancelled }
	}
	activate_targeted_decision = { target = SHX decision = RCM_border_conflict_escalate_conflict }
	activate_targeted_decision = { target = SHX decision = RCM_border_conflict_time_until_cancelled }
}

PRC_personnel_shortage_down = {
	if = {
		limit = {
			has_idea = PRC_no_skilled_personnel_1
		}
		swap_ideas = {
			remove_idea = PRC_no_skilled_personnel_1
			add_idea = PRC_no_skilled_personnel_2
		}
	}
	else_if = {
		limit = {
			has_idea = PRC_no_skilled_personnel_2
		}
		swap_ideas = {
			remove_idea = PRC_no_skilled_personnel_2
			add_idea = PRC_no_skilled_personnel_3
		}
	}
	else_if = {
		limit = {
			has_idea = PRC_no_skilled_personnel_3
		}
		swap_ideas = {
			remove_idea = PRC_no_skilled_personnel_3
			add_idea = PRC_no_skilled_personnel_4
		}
	}
	else_if = {
		limit = {
			has_idea = PRC_no_skilled_personnel_4
		}
		remove_ideas = PRC_no_skilled_personnel_4
	}
}
remove_manchuria_cores_as_china = {
	 every_state = {
	 	limit = {
	 		is_core_of = event_target:WTT_current_china_leader
	 		OR = {
	 			state = 612
	 			state = 757
	 			state = 747
	 			is_manchuria_state = yes
	 		}
	 	}
	 	remove_core_of = event_target:WTT_current_china_leader
	 }
 }
JAP_remove_hostile_create_cmj_bloc_add_china_and_puppets_into_faction = {
	remove_opinion_modifier = {
		target = event_target:WTT_current_china_leader
		modifier = hostile_status
	}
	#dismantle_faction = yes
	create_faction = CHI_man_bloc
	every_country = {
		limit = {
			is_puppet_of = JAP
		}
		JAP = {
			add_to_faction = PREV
		}
	}
	add_to_faction = event_target:WTT_current_china_leader
}

Puppet_HPC_Add_sino_jap_idea_Remove_hostile_Add_alliance_opinion_increase_appeasement = {
	if = {
		limit = {
			has_dlc = "Together for Victory"
		}
		set_autonomy = {
			target = HPC
			autonomous_state = autonomy_integrated_puppet
		}
		else = {
			puppet = HPC
		}
	}
	add_ideas = sino_japanese_alliance
	remove_opinion_modifier = {
		target = JAP
		modifier = hostile_status
	}
	add_opinion_modifier = { target = JAP modifier = sino_japanese_alliance_opinion }
	if = {
		limit = {
			has_idea = appeasement_policy
		}
		swap_ideas = {
			add_idea = appeasement_policy_2
			remove_idea = appeasement_policy
		}
	}
	else_if = {
		limit = {
			has_idea = appeasement_policy_0
		}
		swap_ideas = {
			add_idea = appeasement_policy_2
			remove_idea = appeasement_policy_0
		}
		else = {
			add_ideas = appeasement_policy_2
		}
	}
}

integrated_puppet_HPC = {
	if = {
		limit = {
			has_dlc = "Together for Victory"
		}
		set_autonomy = {
			target = HPC
			autonomous_state = autonomy_integrated_puppet
		}
		else = {
			puppet = HPC
		}
	}
}
